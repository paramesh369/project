- name: Installing Shipping
  hosts: all
  become: true
  become_method: sudo
  vars:
    mysql_password: Devil@321
  tasks:
    - name: Install maven
      ansible.builtin.package:
        name: maven
        state: present

    - name: create user roboshop
      ansible.builtin.user:
        name: roboshop
        state: present

    - name: create an app directory
      ansible.builtin.file:
        path: /app
        state: directory

    - name: Download the application code
      ansible.builtin.get_url:
        url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
        dest: /tmp

    - name: unarchive the application code
      ansible.builtin.unarchive:
        src: /tmp/shipping.zip
        dest: /app
        remote_src: yes

    - name: Download the dependencies
      ansible.builtin.command: mvn clean package
      args: 
        chdir: /app

    - name: Rename the target package
      ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
      args:
        chdir: /app

    - name: copy the shipping service
      ansible.builtin.copy:
        src: shipping.service
        dest: /etc/systemd/system/shipping.service

    - name: Reload the daemon
      ansible.builtin.systemd_service:
        daemon_reload: true

    - name: Install mysql client
      ansible.builtin.dnf:
        name: mysql
        state: present

    - name: check cities schema exists or not
      ansible.builtin.command: mysql -h <MYSQL-SERVER-IPADDRESS> -uroot -p{{mysql_password}} -sN -e "SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'cities'"
      register: schema

    - name: load cities data
      ansible.builtin.command: mysql -h <MYSQL-SERVER-IPADDRESS> -uroot -pDevil@321 < /app/schema/shipping.sql
      when: schema.stdout != "1"

    - name: start and Enable shipping service
      ansible.builtin.service:
        name: shipping
        state: started
        enabled: yes
